// <auto-generated />
using BurgerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BurgerApi.Migrations
{
    [DbContext(typeof(BurgerContext))]
    [Migration("20181123180926_Tbl_Burger_correction")]
    partial class Tbl_Burger_correction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BurgerApi.Models.Burger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BurgerBaseId");

                    b.Property<int>("BurgerImageId");

                    b.Property<int>("CuisineId");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("InstagramSourceUrl")
                        .IsRequired();

                    b.Property<string>("InstagramUserId")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<bool>("Verified");

                    b.HasKey("Id");

                    b.HasIndex("BurgerBaseId");

                    b.HasIndex("BurgerImageId");

                    b.HasIndex("CuisineId");

                    b.ToTable("Burger");
                });

            modelBuilder.Entity("BurgerApi.Models.BurgerBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseName")
                        .IsRequired();

                    b.Property<string>("BaseNameCode")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("BurgerBase");
                });

            modelBuilder.Entity("BurgerApi.Models.BurgerImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileNameLarge")
                        .IsRequired();

                    b.Property<string>("FileNameMedium")
                        .IsRequired();

                    b.Property<string>("FileNameSmall")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("BurgerImage");
                });

            modelBuilder.Entity("BurgerApi.Models.Cuisine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CuisineCode")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("CuisineTitle")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cuisine");
                });

            modelBuilder.Entity("BurgerApi.Models.Burger", b =>
                {
                    b.HasOne("BurgerApi.Models.BurgerBase", "BurgerBase")
                        .WithMany()
                        .HasForeignKey("BurgerBaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BurgerApi.Models.BurgerImage", "Image")
                        .WithMany()
                        .HasForeignKey("BurgerImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BurgerApi.Models.Cuisine", "Cuisine")
                        .WithMany()
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
